{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","ctx","tileW","tileH","currentSeconds","frameCount","frameLastSecond","keyDown","37","38","39","40","player","Character","gameMap","this","tileFrom","tileTo","timeMoved","dimentions","position","delayMove","toIndex","x","y","drawGame","currentFrameTime","Date","now","sec","Math","floor","processMovement","mapH","mapW","fillStyle","fillRect","fillText","requestAnimationFrame","prototype","placeAt","t","diff","round","window","onload","document","getElementById","getContext","font","addEventListener","e","keyCode","className","id","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.15707a7e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  var ctx = null;\n  var tileW= 40, tileH = 40;\n  var mapW = 10, mapH = 10;\n\n  var currentSeconds = 0, frameCount = 0, frameLastSecond = 0;\n  var lastFrameTime = 0;\n\n  var keyDown = {\n    37: false,\n    38: false,\n    39: false,\n    40: false,\n  }\n\n  var player = new Character();\n\n  var gameMap = [\n    0,0,0,0,0,0,0,0,0,0,\n    0,1,1,1,0,1,1,1,1,0,\n    0,1,0,1,0,1,0,0,1,0,\n    0,1,1,1,1,1,1,1,1,0,\n    0,1,0,1,0,1,0,0,1,0,\n    0,1,1,1,1,1,1,1,1,0,\n    0,1,0,1,0,1,0,1,0,0,\n    0,1,1,1,0,1,1,1,1,0,\n    0,0,0,0,0,0,0,0,0,0,\n  ];\n\n  \n\n  function Character() {\n    this.tileFrom = [1,1];\n    this.tileTo = [1,1];\n    this.timeMoved = 0;\n    this.dimentions = [30, 30];\n    this.position = [45, 45];\n    this.delayMove = 200;\n  }\n\n  Character.prototype.placeAt = function(x, y) {\n    this.tileFrom = [x, y];\n    this.tileTo = [x, y];\n    this.position = [\n      ((tileW*x)+ ((tileW - this.dimentions[0]) / 2)),\n      ((tileH* y) + (tileH- this.dimentions[1])/ 2)\n    ]\n  }\n\n  Character.prototype.processMovement = function(t) {\n    if(this.tileFrom[0] === this.tileTo[0] && this.tileFrom[1] === this.tileTo[1]) {\n      return false;\n    }\n\n    if(t-this.timeMoved >= this.delayMove) {\n      this.placeAt(this.tileTo[0], this.tileTo[1]);\n\n    } else {\n        this.position[0] = (this.tileFrom[0] * tileW) + \n        ((tileW - this.dimentions[0]) / 2)\n\n        this.position[1] = (this.tileFrom[1] * tileH) +\n        ((tileH - this.dimentions[1]) / 2)\n\n        if(this.tileTo[0] !== this.tileFrom[0]) {\n          var diff = (tileW / this.delayMove) * (t - this.timeMoved);\n          this.position[0] += (this.tileTo[0] < this.tileFrom[0] ? 0 - diff : diff)\n        }\n\n        if(this.tileTo[1] !== this.tileFrom[1]) {\n          var diff = (tileH / this.delayMove) * (t - this.timeMoved);\n          this.position[1] += (this.tileTo[1] < this.tileFrom[1] ? 0 - diff : diff)\n        }\n\n        this.position[0] = Math.round(this.position[0])\n        this.position[1] = Math.round(this.position[1])\n    }\n\n    return true;\n  }\n\n  function toIndex(x, y) {\n    return ((y * mapW) + x)\n  }\n\n  window.onload = function() {\n    ctx = document.getElementById('game').getContext(\"2d\");\n    requestAnimationFrame(drawGame);\n    ctx.font = \"bold 10pt sans-serif\";\n\n    window.addEventListener('keydown', function(e) {\n      if(e.keyCode >= 37 && e.keyCode <= 40) {\n        keyDown[e.keyCode] = true;\n      }\n    })\n    window.addEventListener('keyup', function(e) {\n      if(e.keyCode >= 37 && e.keyCode <= 40) {\n        keyDown[e.keyCode] = false;\n      }\n    })\n  }\n\n  function drawGame() {\n    if(ctx == null) {\n      return;\n    }\n\n    var currentFrameTime = Date.now();\n    var timeElapsed = currentFrameTime - lastFrameTime;\n\n    let sec = Math.floor(Date.now() / 1000);\n    if(sec !== currentSeconds) {\n      currentSeconds = sec;\n      frameLastSecond = frameCount;\n      frameCount = 1;\n    }\n    else {\n      frameCount++;\n    }\n\n    if(!player.processMovement(currentFrameTime)) {\n\n      if(keyDown[38] && player.tileFrom[1] > 0 && \n        gameMap[toIndex(player.tileFrom[0], \n          player.tileFrom[1] -1 )] === 1) {\n\n            player.tileTo[1] -= 1;\n          }\n\n      else if (\n        keyDown[40] && player.tileFrom[1] < (mapH -1) &&\n        gameMap[toIndex(player.tileFrom[0],\n          player.tileFrom[1] +1)] === 1) {\n\n            player.tileTo[1] += 1\n          }\n      \n      if(keyDown[37] && player.tileFrom[0] > 0 &&\n        gameMap[toIndex(player.tileFrom[0] - 1, \n          player.tileFrom[1])] === 1) {\n            \n            player.tileTo[0] -= 1;\n          }\n      \n      else if (\n        keyDown[39] && player.tileFrom[0] < (mapW -1 ) &&\n        gameMap[toIndex(player.tileFrom[0] + 1,\n          player.tileFrom[1])] === 1) {\n            player.tileTo[0] += 1\n          }\n\n        if(player.tileFrom[0] !== player.tileTo[0] || player.tileFrom[1] !== player.tileTo[1]) {\n          player.timeMoved = currentFrameTime;\n        }\n    }\n\n    for(var y = 0; y < mapH; y++) {\n      for(var x = 0; x < mapW; x++) {\n        switch(gameMap[((y*mapW) + x)]) {\n          case 0: \n            ctx.fillStyle = \"#f22929\";\n            break;\n          default:\n            ctx.fillStyle = \"#eeeeee\";\n        }\n\n        ctx.fillRect(x*tileW, y * tileH, tileW, tileH);\n      }\n    }\n\n    ctx.fillStyle = \"#ffb600\";\n    ctx.fillRect(player.position[0], player.position[1], player.dimentions[0], player.dimentions[1]);\n\n    ctx.fillStyle = \"#ff0000\";\n    ctx.fillText(\"FPS: \" + frameLastSecond, 10, 20);\n\n    lastFrameTime = currentFrameTime;\n    requestAnimationFrame(drawGame);\n  }\n\n\n  return (\n    <div className=\"App\">\n    <canvas id='game' width='600' height='600'></canvas>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}